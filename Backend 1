const express = require('express');
const app = express();
const PORT = 3000;

// Logger Middleware (applied globally)
app.use((req, res, next) => {
  const timestamp = new Date().toISOString();
  console.log(`[${timestamp}] ${req.method} ${req.url}`);
  next();
});

// Auth Middleware (for protected routes only)
const authMiddleware = (req, res, next) => {
  const authHeader = req.headers['authorization'];
  const token = authHeader && authHeader.split(' ')[1];

  if (token === 'mysecrettoken') {
    next(); // Token is valid
  } else {
    res.status(401).json({ error: 'Unauthorized: Invalid or missing token' });
  }
};

// Public Route
app.get('/public', (req, res) => {
  res.json({ message: 'This is a public endpoint. No authentication required.' });
});

// Protected Route
app.get('/protected', authMiddleware, (req, res) => {
  res.json({ message: 'Access granted to protected endpoint.' });
});

// Start Server
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
